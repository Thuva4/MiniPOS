{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger MiniPOS",
    "description": "API specification for MiniPOS",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3001/api"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "Logs in and returns the authentication  cookie",
        "requestBody": {
          "required": true,
          "description": "A JSON object containing the login and password.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully authenticated. The session ID is returned in a cookie named `UserID`. You need to include this cookie in subsequent requests.\n",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "UserID=abcde12345; Path=/; HttpOnly"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "description": "Clear the session deatils from the server.\n",
        "operationId": "logout",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Cleared the session details.\n"
          }
        }
      }
    },
    "/items": {
      "get": {
        "description": "Returns all the open Items from the system.\n",
        "operationId": "findItems",
        "parameters":[{
          "name": "name",
          "in": "query",
          "schema": {
          "type": "string",
          "description": "partial name of the item"
          }
        }],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Item response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Item"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new Item",
        "operationId": "addItem",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ItemBody"
        },
        "responses": {
          "200": {
            "description": "Item response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "description": "Returns all the open orders from the system.\n",
        "operationId": "findOrders",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "order response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetOrder"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new Order in the system.",
        "operationId": "addOrder",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/OrderBody"
        },
        "responses": {
          "200": {
            "description": "Order response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "description": "Returns a order based on a single ID.",
        "operationId": "find order by id",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of order to fetch",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "order response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/order/{orderId}/items/": {
      "get": {
        "description": "Returns all items for a order.\n",
        "operationId": "findItems",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of order",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ordered item response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderedItem"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new Item to an order.",
        "operationId": "addItemForOrder",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of order",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/OrderedItemBody"
        },
        "responses": {
          "200": {
            "description": "ordered item response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderedItem"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/order/{orderId}/items/{itemId}": {
      "delete": {
        "description": "deletes a single item based on the ID supplied from a specific order",
        "operationId": "deleteItemOnOrder",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of order",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "ID of item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Item deleted"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Update the quantity of the single item based on the ID supplied from a specific order",
        "operationId": "updateItemOnOrder",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of order",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "ID of item to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated quantity value",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "quantity"
                ],
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ordered Item response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderedItem"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "userId"
      }
    },
    "requestBodies": {
      "ItemBody": {
        "description": "A JSON object containing Item information",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NewItem"
            }
          }
        }
      },
      "OrderedItemBody": {
        "description": "A JSON object containing OrderedItem information",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NewOrderedItem"
            }
          }
        }
      },
      "OrderBody": {
        "description": "A JSON object containing Ordere information",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NewOrder"
            }
          }
        }
      }
      
    },
    "schemas": {
      "GetOrder": {
        "required": [
          "createdDate",
          "_id",
          "amount"
        ],
        "properties": {
          "createdDate": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format":"int32"
          }

        }
      },
      "Order": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewOrder"
          },
          {
            "required": [
              "_id",
              "amount"
            ],
            "properties": {
              "_id": {
                "type": "string"
              },
              "amount": {
                "type": "integer",
                "format":"int32"
              }
            }
          }
        ]
      },
      "Item": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewItem"
          },
          {
            "required": [
              "_id"
            ],
            "properties": {
              "_id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "OrderedItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewOrderedItem"
          },
          {
            "required":[
              "_id",
              "amount"
            ],
            "properties":{
              "_id":{
                "type":"string"
              },
              "amount": {
                "type":"integer",
                "format":"int32"
              }
            }
            
          }

        ]
      },
      "LoginRequest": {
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "NewOrder": {
        "required": [
          "createdDate",
          "items",
          "openStatus",
          "discountPercentage",
          "userId"
        ],
        "properties": {
          "createdDate": {
            "type": "string"
          },
          "openStatus": {
            "type": "boolean"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewOrderedItem"
            }
          },
          "userId": {
            "type": "string"
          },
          "discountPercentage": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "NewOrderedItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewItem"
          },
          {
            "required": [
              "itemId",
              "quantity"
            ],
            "properties": {
              "itemId": {
                "type": "string"
              },
              "quantity": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "NewItem": {
        "required": [
          "name",
          "category",
          "price",
          "discountPercentage"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          },
          "discountPercentage": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Error": {
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}